# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'muddymorph.ui'
#
# Created by: PyQt5 UI code generator 5.6
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(990, 660)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/stilo/guicandy/icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setEnabled(True)
        self.tabWidget.setObjectName("tabWidget")
        self.tabImages = QtWidgets.QWidget()
        self.tabImages.setObjectName("tabImages")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.tabImages)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.previewKey = QtWidgets.QLabel(self.tabImages)
        self.previewKey.setMinimumSize(QtCore.QSize(500, 300))
        self.previewKey.setText("")
        self.previewKey.setPixmap(QtGui.QPixmap(":/stilo/guicandy/icon.png"))
        self.previewKey.setAlignment(QtCore.Qt.AlignCenter)
        self.previewKey.setObjectName("previewKey")
        self.horizontalLayout_2.addWidget(self.previewKey)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.buttonSelectFiles = QtWidgets.QPushButton(self.tabImages)
        self.buttonSelectFiles.setObjectName("buttonSelectFiles")
        self.verticalLayout_2.addWidget(self.buttonSelectFiles)
        self.tableKey = QtWidgets.QTableView(self.tabImages)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tableKey.sizePolicy().hasHeightForWidth())
        self.tableKey.setSizePolicy(sizePolicy)
        self.tableKey.setMinimumSize(QtCore.QSize(0, 400))
        self.tableKey.setAlternatingRowColors(True)
        self.tableKey.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableKey.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.tableKey.setCornerButtonEnabled(False)
        self.tableKey.setObjectName("tableKey")
        self.tableKey.horizontalHeader().setStretchLastSection(True)
        self.tableKey.verticalHeader().setVisible(False)
        self.verticalLayout_2.addWidget(self.tableKey)
        self.groupBox = QtWidgets.QGroupBox(self.tabImages)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox.sizePolicy().hasHeightForWidth())
        self.groupBox.setSizePolicy(sizePolicy)
        self.groupBox.setObjectName("groupBox")
        self.radioStraight = QtWidgets.QRadioButton(self.groupBox)
        self.radioStraight.setGeometry(QtCore.QRect(10, 30, 100, 20))
        self.radioStraight.setChecked(True)
        self.radioStraight.setObjectName("radioStraight")
        self.radioLoop = QtWidgets.QRadioButton(self.groupBox)
        self.radioLoop.setGeometry(QtCore.QRect(10, 60, 100, 20))
        self.radioLoop.setObjectName("radioLoop")
        self.radioReverse = QtWidgets.QRadioButton(self.groupBox)
        self.radioReverse.setGeometry(QtCore.QRect(10, 90, 100, 20))
        self.radioReverse.setObjectName("radioReverse")
        self.verticalLayout_2.addWidget(self.groupBox)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem)
        self.buttonFinishKey = QtWidgets.QPushButton(self.tabImages)
        self.buttonFinishKey.setObjectName("buttonFinishKey")
        self.verticalLayout_2.addWidget(self.buttonFinishKey)
        self.horizontalLayout_2.addLayout(self.verticalLayout_2)
        self.horizontalLayout_2.setStretch(0, 1)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/stilo/guicandy/t1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.tabImages, icon1, "")
        self.tabPreferences = QtWidgets.QWidget()
        self.tabPreferences.setObjectName("tabPreferences")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.tabPreferences)
        self.horizontalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.previewPrefs = QtWidgets.QLabel(self.tabPreferences)
        self.previewPrefs.setMinimumSize(QtCore.QSize(300, 300))
        self.previewPrefs.setText("")
        self.previewPrefs.setPixmap(QtGui.QPixmap(":/stilo/guicandy/icon.png"))
        self.previewPrefs.setAlignment(QtCore.Qt.AlignCenter)
        self.previewPrefs.setObjectName("previewPrefs")
        self.horizontalLayout_7.addWidget(self.previewPrefs)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setFieldGrowthPolicy(QtWidgets.QFormLayout.AllNonFixedFieldsGrow)
        self.formLayout.setLabelAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.formLayout.setObjectName("formLayout")
        self.label_2 = QtWidgets.QLabel(self.tabPreferences)
        self.label_2.setObjectName("label_2")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_2)
        self.editName = QtWidgets.QLineEdit(self.tabPreferences)
        self.editName.setObjectName("editName")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.editName)
        self.label_01 = QtWidgets.QLabel(self.tabPreferences)
        self.label_01.setObjectName("label_01")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_01)
        self.comboExtension = QtWidgets.QComboBox(self.tabPreferences)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboExtension.sizePolicy().hasHeightForWidth())
        self.comboExtension.setSizePolicy(sizePolicy)
        self.comboExtension.setObjectName("comboExtension")
        self.comboExtension.addItem("")
        self.comboExtension.addItem("")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.comboExtension)
        self.checkTransparency = QtWidgets.QCheckBox(self.tabPreferences)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkTransparency.sizePolicy().hasHeightForWidth())
        self.checkTransparency.setSizePolicy(sizePolicy)
        self.checkTransparency.setMinimumSize(QtCore.QSize(400, 0))
        self.checkTransparency.setChecked(True)
        self.checkTransparency.setObjectName("checkTransparency")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.checkTransparency)
        self.label_02 = QtWidgets.QLabel(self.tabPreferences)
        self.label_02.setObjectName("label_02")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_02)
        self.spinQuality = QtWidgets.QSpinBox(self.tabPreferences)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.spinQuality.sizePolicy().hasHeightForWidth())
        self.spinQuality.setSizePolicy(sizePolicy)
        self.spinQuality.setMinimum(1)
        self.spinQuality.setMaximum(100)
        self.spinQuality.setProperty("value", 98)
        self.spinQuality.setObjectName("spinQuality")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.spinQuality)
        self.label_04 = QtWidgets.QLabel(self.tabPreferences)
        self.label_04.setObjectName("label_04")
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_04)
        self.spinTypicalTweens = QtWidgets.QSpinBox(self.tabPreferences)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.spinTypicalTweens.sizePolicy().hasHeightForWidth())
        self.spinTypicalTweens.setSizePolicy(sizePolicy)
        self.spinTypicalTweens.setMinimum(1)
        self.spinTypicalTweens.setMaximum(200)
        self.spinTypicalTweens.setProperty("value", 11)
        self.spinTypicalTweens.setObjectName("spinTypicalTweens")
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.spinTypicalTweens)
        self.label_05 = QtWidgets.QLabel(self.tabPreferences)
        self.label_05.setObjectName("label_05")
        self.formLayout.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.label_05)
        self.buttonBackground = QtWidgets.QPushButton(self.tabPreferences)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.buttonBackground.sizePolicy().hasHeightForWidth())
        self.buttonBackground.setSizePolicy(sizePolicy)
        self.buttonBackground.setStyleSheet("background-color: rgb(0, 255, 0);")
        self.buttonBackground.setText("")
        self.buttonBackground.setObjectName("buttonBackground")
        self.formLayout.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.buttonBackground)
        self.checkAutoBack = QtWidgets.QCheckBox(self.tabPreferences)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkAutoBack.sizePolicy().hasHeightForWidth())
        self.checkAutoBack.setSizePolicy(sizePolicy)
        self.checkAutoBack.setChecked(True)
        self.checkAutoBack.setObjectName("checkAutoBack")
        self.formLayout.setWidget(7, QtWidgets.QFormLayout.FieldRole, self.checkAutoBack)
        self.label_6 = QtWidgets.QLabel(self.tabPreferences)
        self.label_6.setObjectName("label_6")
        self.formLayout.setWidget(8, QtWidgets.QFormLayout.LabelRole, self.label_6)
        self.buttonLineColor = QtWidgets.QPushButton(self.tabPreferences)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.buttonLineColor.sizePolicy().hasHeightForWidth())
        self.buttonLineColor.setSizePolicy(sizePolicy)
        self.buttonLineColor.setStyleSheet("background-color: rgb(0, 128, 255);")
        self.buttonLineColor.setText("")
        self.buttonLineColor.setObjectName("buttonLineColor")
        self.formLayout.setWidget(8, QtWidgets.QFormLayout.FieldRole, self.buttonLineColor)
        self.checkLineColor = QtWidgets.QCheckBox(self.tabPreferences)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkLineColor.sizePolicy().hasHeightForWidth())
        self.checkLineColor.setSizePolicy(sizePolicy)
        self.checkLineColor.setChecked(True)
        self.checkLineColor.setObjectName("checkLineColor")
        self.formLayout.setWidget(9, QtWidgets.QFormLayout.FieldRole, self.checkLineColor)
        self.label_29 = QtWidgets.QLabel(self.tabPreferences)
        self.label_29.setObjectName("label_29")
        self.formLayout.setWidget(10, QtWidgets.QFormLayout.LabelRole, self.label_29)
        self.buttonBackdrop = QtWidgets.QPushButton(self.tabPreferences)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.buttonBackdrop.sizePolicy().hasHeightForWidth())
        self.buttonBackdrop.setSizePolicy(sizePolicy)
        self.buttonBackdrop.setObjectName("buttonBackdrop")
        self.formLayout.setWidget(10, QtWidgets.QFormLayout.FieldRole, self.buttonBackdrop)
        self.verticalLayout.addLayout(self.formLayout)
        self.buttonFinishPrefs = QtWidgets.QPushButton(self.tabPreferences)
        self.buttonFinishPrefs.setObjectName("buttonFinishPrefs")
        self.verticalLayout.addWidget(self.buttonFinishPrefs)
        self.horizontalLayout_7.addLayout(self.verticalLayout)
        self.horizontalLayout_7.setStretch(0, 1)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/stilo/guicandy/t2.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.tabPreferences, icon2, "")
        self.tabEdge = QtWidgets.QWidget()
        self.tabEdge.setObjectName("tabEdge")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.tabEdge)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.previewEdge = QtWidgets.QLabel(self.tabEdge)
        self.previewEdge.setMinimumSize(QtCore.QSize(500, 300))
        self.previewEdge.setText("")
        self.previewEdge.setPixmap(QtGui.QPixmap(":/stilo/guicandy/icon.png"))
        self.previewEdge.setAlignment(QtCore.Qt.AlignCenter)
        self.previewEdge.setObjectName("previewEdge")
        self.horizontalLayout_3.addWidget(self.previewEdge)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.tableEdge = QtWidgets.QTableView(self.tabEdge)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tableEdge.sizePolicy().hasHeightForWidth())
        self.tableEdge.setSizePolicy(sizePolicy)
        self.tableEdge.setMinimumSize(QtCore.QSize(0, 250))
        self.tableEdge.setAlternatingRowColors(True)
        self.tableEdge.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableEdge.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.tableEdge.setCornerButtonEnabled(False)
        self.tableEdge.setObjectName("tableEdge")
        self.tableEdge.horizontalHeader().setStretchLastSection(True)
        self.tableEdge.verticalHeader().setVisible(False)
        self.verticalLayout_3.addWidget(self.tableEdge)
        self.formLayout_2 = QtWidgets.QFormLayout()
        self.formLayout_2.setFieldGrowthPolicy(QtWidgets.QFormLayout.AllNonFixedFieldsGrow)
        self.formLayout_2.setLabelAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.formLayout_2.setObjectName("formLayout_2")
        self.comboChannel = QtWidgets.QComboBox(self.tabEdge)
        self.comboChannel.setObjectName("comboChannel")
        self.comboChannel.addItem("")
        self.comboChannel.addItem("")
        self.comboChannel.addItem("")
        self.comboChannel.addItem("")
        self.comboChannel.addItem("")
        self.comboChannel.addItem("")
        self.comboChannel.addItem("")
        self.comboChannel.addItem("")
        self.comboChannel.addItem("")
        self.comboChannel.addItem("")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.comboChannel)
        self.label_07 = QtWidgets.QLabel(self.tabEdge)
        self.label_07.setObjectName("label_07")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_07)
        self.label_08 = QtWidgets.QLabel(self.tabEdge)
        self.label_08.setObjectName("label_08")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_08)
        self.spinBlur = QtWidgets.QSpinBox(self.tabEdge)
        self.spinBlur.setProperty("value", 3)
        self.spinBlur.setObjectName("spinBlur")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.spinBlur)
        self.label_09 = QtWidgets.QLabel(self.tabEdge)
        self.label_09.setObjectName("label_09")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_09)
        self.spinThreshold = QtWidgets.QSpinBox(self.tabEdge)
        self.spinThreshold.setMaximum(100)
        self.spinThreshold.setProperty("value", 40)
        self.spinThreshold.setObjectName("spinThreshold")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.spinThreshold)
        self.checkScharr = QtWidgets.QCheckBox(self.tabEdge)
        self.checkScharr.setObjectName("checkScharr")
        self.formLayout_2.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.checkScharr)
        self.checkInvert = QtWidgets.QCheckBox(self.tabEdge)
        self.checkInvert.setObjectName("checkInvert")
        self.formLayout_2.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.checkInvert)
        self.verticalLayout_3.addLayout(self.formLayout_2)
        self.buttonAllEdge = QtWidgets.QPushButton(self.tabEdge)
        self.buttonAllEdge.setObjectName("buttonAllEdge")
        self.verticalLayout_3.addWidget(self.buttonAllEdge)
        self.checkShowSilhouette = QtWidgets.QCheckBox(self.tabEdge)
        self.checkShowSilhouette.setChecked(True)
        self.checkShowSilhouette.setObjectName("checkShowSilhouette")
        self.verticalLayout_3.addWidget(self.checkShowSilhouette)
        self.checkShowEdge = QtWidgets.QCheckBox(self.tabEdge)
        self.checkShowEdge.setChecked(True)
        self.checkShowEdge.setObjectName("checkShowEdge")
        self.verticalLayout_3.addWidget(self.checkShowEdge)
        self.checkShowCenter = QtWidgets.QCheckBox(self.tabEdge)
        self.checkShowCenter.setChecked(True)
        self.checkShowCenter.setObjectName("checkShowCenter")
        self.verticalLayout_3.addWidget(self.checkShowCenter)
        self.buttonEdge = QtWidgets.QPushButton(self.tabEdge)
        self.buttonEdge.setObjectName("buttonEdge")
        self.verticalLayout_3.addWidget(self.buttonEdge)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_3.addItem(spacerItem1)
        self.buttonFinishEdge = QtWidgets.QPushButton(self.tabEdge)
        self.buttonFinishEdge.setObjectName("buttonFinishEdge")
        self.verticalLayout_3.addWidget(self.buttonFinishEdge)
        self.horizontalLayout_3.addLayout(self.verticalLayout_3)
        self.horizontalLayout_3.setStretch(0, 1)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/stilo/guicandy/t3.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.tabEdge, icon3, "")
        self.tabTrajectories = QtWidgets.QWidget()
        self.tabTrajectories.setObjectName("tabTrajectories")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout(self.tabTrajectories)
        self.horizontalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.previewTraject = QtWidgets.QLabel(self.tabTrajectories)
        self.previewTraject.setMinimumSize(QtCore.QSize(500, 300))
        self.previewTraject.setPixmap(QtGui.QPixmap(":/stilo/guicandy/icon.png"))
        self.previewTraject.setAlignment(QtCore.Qt.AlignCenter)
        self.previewTraject.setObjectName("previewTraject")
        self.horizontalLayout_9.addWidget(self.previewTraject)
        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.tableTraject = QtWidgets.QTableView(self.tabTrajectories)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tableTraject.sizePolicy().hasHeightForWidth())
        self.tableTraject.setSizePolicy(sizePolicy)
        self.tableTraject.setMinimumSize(QtCore.QSize(0, 250))
        self.tableTraject.setAlternatingRowColors(True)
        self.tableTraject.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableTraject.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.tableTraject.setCornerButtonEnabled(False)
        self.tableTraject.setObjectName("tableTraject")
        self.tableTraject.horizontalHeader().setStretchLastSection(True)
        self.tableTraject.verticalHeader().setVisible(False)
        self.verticalLayout_5.addWidget(self.tableTraject)
        self.formLayout_5 = QtWidgets.QFormLayout()
        self.formLayout_5.setFieldGrowthPolicy(QtWidgets.QFormLayout.AllNonFixedFieldsGrow)
        self.formLayout_5.setLabelAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.formLayout_5.setObjectName("formLayout_5")
        self.label_18 = QtWidgets.QLabel(self.tabTrajectories)
        self.label_18.setObjectName("label_18")
        self.formLayout_5.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_18)
        self.spinMaxPoints = QtWidgets.QSpinBox(self.tabTrajectories)
        self.spinMaxPoints.setMinimum(1)
        self.spinMaxPoints.setMaximum(5000)
        self.spinMaxPoints.setProperty("value", 1000)
        self.spinMaxPoints.setObjectName("spinMaxPoints")
        self.formLayout_5.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.spinMaxPoints)
        self.spinNeighbours = QtWidgets.QSpinBox(self.tabTrajectories)
        self.spinNeighbours.setPrefix("")
        self.spinNeighbours.setMinimum(1)
        self.spinNeighbours.setMaximum(100)
        self.spinNeighbours.setProperty("value", 10)
        self.spinNeighbours.setObjectName("spinNeighbours")
        self.formLayout_5.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.spinNeighbours)
        self.checkCorners = QtWidgets.QCheckBox(self.tabTrajectories)
        self.checkCorners.setObjectName("checkCorners")
        self.formLayout_5.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.checkCorners)
        self.comboCornerCatcher = QtWidgets.QComboBox(self.tabTrajectories)
        self.comboCornerCatcher.setObjectName("comboCornerCatcher")
        self.comboCornerCatcher.addItem("")
        self.comboCornerCatcher.addItem("")
        self.formLayout_5.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.comboCornerCatcher)
        self.checkSilhouette = QtWidgets.QCheckBox(self.tabTrajectories)
        self.checkSilhouette.setObjectName("checkSilhouette")
        self.formLayout_5.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.checkSilhouette)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.checkArc = QtWidgets.QCheckBox(self.tabTrajectories)
        self.checkArc.setObjectName("checkArc")
        self.horizontalLayout_5.addWidget(self.checkArc)
        self.checkSpin = QtWidgets.QCheckBox(self.tabTrajectories)
        self.checkSpin.setObjectName("checkSpin")
        self.horizontalLayout_5.addWidget(self.checkSpin)
        self.formLayout_5.setLayout(3, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_5)
        self.label_19 = QtWidgets.QLabel(self.tabTrajectories)
        self.label_19.setObjectName("label_19")
        self.formLayout_5.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_19)
        self.spinDetail = QtWidgets.QSpinBox(self.tabTrajectories)
        self.spinDetail.setMinimum(1)
        self.spinDetail.setMaximum(200)
        self.spinDetail.setProperty("value", 20)
        self.spinDetail.setObjectName("spinDetail")
        self.formLayout_5.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.spinDetail)
        self.label_17 = QtWidgets.QLabel(self.tabTrajectories)
        self.label_17.setObjectName("label_17")
        self.formLayout_5.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_17)
        self.spinSimiLim = QtWidgets.QSpinBox(self.tabTrajectories)
        self.spinSimiLim.setMinimum(0)
        self.spinSimiLim.setMaximum(100)
        self.spinSimiLim.setProperty("value", 40)
        self.spinSimiLim.setObjectName("spinSimiLim")
        self.formLayout_5.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.spinSimiLim)
        self.label_30 = QtWidgets.QLabel(self.tabTrajectories)
        self.label_30.setObjectName("label_30")
        self.formLayout_5.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_30)
        self.spinMaxMove = QtWidgets.QSpinBox(self.tabTrajectories)
        self.spinMaxMove.setMinimum(1)
        self.spinMaxMove.setMaximum(100)
        self.spinMaxMove.setProperty("value", 30)
        self.spinMaxMove.setObjectName("spinMaxMove")
        self.formLayout_5.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.spinMaxMove)
        self.label_31 = QtWidgets.QLabel(self.tabTrajectories)
        self.label_31.setObjectName("label_31")
        self.formLayout_5.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.label_31)
        self.verticalLayout_5.addLayout(self.formLayout_5)
        self.buttonAllTraject = QtWidgets.QPushButton(self.tabTrajectories)
        self.buttonAllTraject.setObjectName("buttonAllTraject")
        self.verticalLayout_5.addWidget(self.buttonAllTraject)
        self.buttonTraject = QtWidgets.QPushButton(self.tabTrajectories)
        self.buttonTraject.setObjectName("buttonTraject")
        self.verticalLayout_5.addWidget(self.buttonTraject)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_5.addItem(spacerItem2)
        self.buttonFinishTraject = QtWidgets.QPushButton(self.tabTrajectories)
        self.buttonFinishTraject.setObjectName("buttonFinishTraject")
        self.verticalLayout_5.addWidget(self.buttonFinishTraject)
        self.horizontalLayout_9.addLayout(self.verticalLayout_5)
        self.horizontalLayout_9.setStretch(0, 1)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/stilo/guicandy/t4.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.tabTrajectories, icon4, "")
        self.tabMotion = QtWidgets.QWidget()
        self.tabMotion.setObjectName("tabMotion")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.tabMotion)
        self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.previewMotion = QtWidgets.QLabel(self.tabMotion)
        self.previewMotion.setMinimumSize(QtCore.QSize(500, 300))
        self.previewMotion.setText("")
        self.previewMotion.setPixmap(QtGui.QPixmap(":/stilo/guicandy/icon.png"))
        self.previewMotion.setAlignment(QtCore.Qt.AlignCenter)
        self.previewMotion.setObjectName("previewMotion")
        self.verticalLayout_4.addWidget(self.previewMotion)
        self.slideMotion = QtWidgets.QSlider(self.tabMotion)
        self.slideMotion.setMaximum(9)
        self.slideMotion.setOrientation(QtCore.Qt.Horizontal)
        self.slideMotion.setTickPosition(QtWidgets.QSlider.TicksBothSides)
        self.slideMotion.setTickInterval(1)
        self.slideMotion.setObjectName("slideMotion")
        self.verticalLayout_4.addWidget(self.slideMotion)
        self.horizontalLayout_6.addLayout(self.verticalLayout_4)
        self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.tableMotion = QtWidgets.QTableView(self.tabMotion)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tableMotion.sizePolicy().hasHeightForWidth())
        self.tableMotion.setSizePolicy(sizePolicy)
        self.tableMotion.setMinimumSize(QtCore.QSize(0, 250))
        self.tableMotion.setAlternatingRowColors(True)
        self.tableMotion.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableMotion.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.tableMotion.setCornerButtonEnabled(False)
        self.tableMotion.setObjectName("tableMotion")
        self.tableMotion.horizontalHeader().setStretchLastSection(True)
        self.tableMotion.verticalHeader().setVisible(False)
        self.verticalLayout_6.addWidget(self.tableMotion)
        self.groupBox_4 = QtWidgets.QGroupBox(self.tabMotion)
        self.groupBox_4.setObjectName("groupBox_4")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.groupBox_4)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.formLayout_6 = QtWidgets.QFormLayout()
        self.formLayout_6.setFieldGrowthPolicy(QtWidgets.QFormLayout.AllNonFixedFieldsGrow)
        self.formLayout_6.setLabelAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.formLayout_6.setObjectName("formLayout_6")
        self.label_22 = QtWidgets.QLabel(self.groupBox_4)
        self.label_22.setObjectName("label_22")
        self.formLayout_6.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_22)
        self.spinBetweens = QtWidgets.QSpinBox(self.groupBox_4)
        self.spinBetweens.setMinimum(1)
        self.spinBetweens.setMaximum(200)
        self.spinBetweens.setProperty("value", 11)
        self.spinBetweens.setObjectName("spinBetweens")
        self.formLayout_6.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.spinBetweens)
        self.label_23 = QtWidgets.QLabel(self.groupBox_4)
        self.label_23.setObjectName("label_23")
        self.formLayout_6.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_23)
        self.comboMotion = QtWidgets.QComboBox(self.groupBox_4)
        self.comboMotion.setObjectName("comboMotion")
        self.comboMotion.addItem("")
        self.comboMotion.addItem("")
        self.comboMotion.addItem("")
        self.comboMotion.addItem("")
        self.formLayout_6.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.comboMotion)
        self.label_28 = QtWidgets.QLabel(self.groupBox_4)
        self.label_28.setObjectName("label_28")
        self.formLayout_6.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_28)
        self.checkBlob = QtWidgets.QCheckBox(self.groupBox_4)
        self.checkBlob.setObjectName("checkBlob")
        self.formLayout_6.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.checkBlob)
        self.spinFade = QtWidgets.QSpinBox(self.groupBox_4)
        self.spinFade.setMinimum(0)
        self.spinFade.setMaximum(100)
        self.spinFade.setProperty("value", 100)
        self.spinFade.setObjectName("spinFade")
        self.formLayout_6.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.spinFade)
        self.verticalLayout_9.addLayout(self.formLayout_6)
        self.buttonAllMotion = QtWidgets.QPushButton(self.groupBox_4)
        self.buttonAllMotion.setObjectName("buttonAllMotion")
        self.verticalLayout_9.addWidget(self.buttonAllMotion)
        self.verticalLayout_6.addWidget(self.groupBox_4)
        self.groupBox_3 = QtWidgets.QGroupBox(self.tabMotion)
        self.groupBox_3.setObjectName("groupBox_3")
        self.formLayout_7 = QtWidgets.QFormLayout(self.groupBox_3)
        self.formLayout_7.setFieldGrowthPolicy(QtWidgets.QFormLayout.AllNonFixedFieldsGrow)
        self.formLayout_7.setLabelAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.formLayout_7.setObjectName("formLayout_7")
        self.label_27 = QtWidgets.QLabel(self.groupBox_3)
        self.label_27.setObjectName("label_27")
        self.formLayout_7.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_27)
        self.spinVignette = QtWidgets.QSpinBox(self.groupBox_3)
        self.spinVignette.setMaximum(300)
        self.spinVignette.setProperty("value", 0)
        self.spinVignette.setObjectName("spinVignette")
        self.formLayout_7.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.spinVignette)
        self.label_32 = QtWidgets.QLabel(self.groupBox_3)
        self.label_32.setObjectName("label_32")
        self.formLayout_7.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_32)
        self.label_33 = QtWidgets.QLabel(self.groupBox_3)
        self.label_33.setObjectName("label_33")
        self.formLayout_7.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_33)
        self.spinInflate = QtWidgets.QSpinBox(self.groupBox_3)
        self.spinInflate.setMinimum(10)
        self.spinInflate.setMaximum(500)
        self.spinInflate.setProperty("value", 100)
        self.spinInflate.setObjectName("spinInflate")
        self.formLayout_7.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.spinInflate)
        self.spinHardness = QtWidgets.QSpinBox(self.groupBox_3)
        self.spinHardness.setMinimum(0)
        self.spinHardness.setMaximum(100)
        self.spinHardness.setProperty("value", 50)
        self.spinHardness.setObjectName("spinHardness")
        self.formLayout_7.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.spinHardness)
        self.verticalLayout_6.addWidget(self.groupBox_3)
        self.buttonMotion = QtWidgets.QPushButton(self.tabMotion)
        self.buttonMotion.setObjectName("buttonMotion")
        self.verticalLayout_6.addWidget(self.buttonMotion)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.buttonRevPrev = QtWidgets.QPushButton(self.tabMotion)
        self.buttonRevPrev.setCheckable(True)
        self.buttonRevPrev.setObjectName("buttonRevPrev")
        self.horizontalLayout_4.addWidget(self.buttonRevPrev)
        self.spinFrameRate = QtWidgets.QSpinBox(self.tabMotion)
        self.spinFrameRate.setMinimum(1)
        self.spinFrameRate.setMaximum(30)
        self.spinFrameRate.setProperty("value", 4)
        self.spinFrameRate.setObjectName("spinFrameRate")
        self.horizontalLayout_4.addWidget(self.spinFrameRate)
        self.buttonPlayMotion = QtWidgets.QPushButton(self.tabMotion)
        self.buttonPlayMotion.setObjectName("buttonPlayMotion")
        self.horizontalLayout_4.addWidget(self.buttonPlayMotion)
        self.horizontalLayout_4.setStretch(0, 1)
        self.horizontalLayout_4.setStretch(1, 2)
        self.horizontalLayout_4.setStretch(2, 3)
        self.verticalLayout_6.addLayout(self.horizontalLayout_4)
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_6.addItem(spacerItem3)
        self.buttonFinishMotion = QtWidgets.QPushButton(self.tabMotion)
        self.buttonFinishMotion.setObjectName("buttonFinishMotion")
        self.verticalLayout_6.addWidget(self.buttonFinishMotion)
        self.horizontalLayout_6.addLayout(self.verticalLayout_6)
        self.horizontalLayout_6.setStretch(0, 1)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/stilo/guicandy/t5.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.tabMotion, icon5, "")
        self.tabRender = QtWidgets.QWidget()
        self.tabRender.setObjectName("tabRender")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.tabRender)
        self.horizontalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.previewRender = QtWidgets.QLabel(self.tabRender)
        self.previewRender.setMinimumSize(QtCore.QSize(500, 300))
        self.previewRender.setText("")
        self.previewRender.setPixmap(QtGui.QPixmap(":/stilo/guicandy/icon.png"))
        self.previewRender.setAlignment(QtCore.Qt.AlignCenter)
        self.previewRender.setObjectName("previewRender")
        self.horizontalLayout_8.addWidget(self.previewRender)
        self.verticalLayout_7 = QtWidgets.QVBoxLayout()
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.label_25 = QtWidgets.QLabel(self.tabRender)
        self.label_25.setObjectName("label_25")
        self.verticalLayout_7.addWidget(self.label_25)
        self.editFolder = QtWidgets.QLineEdit(self.tabRender)
        self.editFolder.setMinimumSize(QtCore.QSize(300, 0))
        self.editFolder.setObjectName("editFolder")
        self.verticalLayout_7.addWidget(self.editFolder)
        self.buttonFolder = QtWidgets.QPushButton(self.tabRender)
        self.buttonFolder.setObjectName("buttonFolder")
        self.verticalLayout_7.addWidget(self.buttonFolder)
        spacerItem4 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_7.addItem(spacerItem4)
        self.buttonAbortRender = QtWidgets.QPushButton(self.tabRender)
        self.buttonAbortRender.setObjectName("buttonAbortRender")
        self.verticalLayout_7.addWidget(self.buttonAbortRender)
        self.buttonRender = QtWidgets.QPushButton(self.tabRender)
        self.buttonRender.setObjectName("buttonRender")
        self.verticalLayout_7.addWidget(self.buttonRender)
        self.horizontalLayout_8.addLayout(self.verticalLayout_7)
        self.horizontalLayout_8.setStretch(0, 1)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/stilo/guicandy/t6.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.tabRender, icon6, "")
        self.horizontalLayout.addWidget(self.tabWidget)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.tabWidget, self.buttonSelectFiles)
        MainWindow.setTabOrder(self.buttonSelectFiles, self.tableKey)
        MainWindow.setTabOrder(self.tableKey, self.radioStraight)
        MainWindow.setTabOrder(self.radioStraight, self.radioLoop)
        MainWindow.setTabOrder(self.radioLoop, self.radioReverse)
        MainWindow.setTabOrder(self.radioReverse, self.buttonFinishKey)
        MainWindow.setTabOrder(self.buttonFinishKey, self.editName)
        MainWindow.setTabOrder(self.editName, self.comboExtension)
        MainWindow.setTabOrder(self.comboExtension, self.checkTransparency)
        MainWindow.setTabOrder(self.checkTransparency, self.spinQuality)
        MainWindow.setTabOrder(self.spinQuality, self.spinTypicalTweens)
        MainWindow.setTabOrder(self.spinTypicalTweens, self.buttonBackground)
        MainWindow.setTabOrder(self.buttonBackground, self.checkAutoBack)
        MainWindow.setTabOrder(self.checkAutoBack, self.buttonLineColor)
        MainWindow.setTabOrder(self.buttonLineColor, self.checkLineColor)
        MainWindow.setTabOrder(self.checkLineColor, self.buttonBackdrop)
        MainWindow.setTabOrder(self.buttonBackdrop, self.buttonFinishPrefs)
        MainWindow.setTabOrder(self.buttonFinishPrefs, self.tableEdge)
        MainWindow.setTabOrder(self.tableEdge, self.comboChannel)
        MainWindow.setTabOrder(self.comboChannel, self.spinBlur)
        MainWindow.setTabOrder(self.spinBlur, self.spinThreshold)
        MainWindow.setTabOrder(self.spinThreshold, self.checkScharr)
        MainWindow.setTabOrder(self.checkScharr, self.checkInvert)
        MainWindow.setTabOrder(self.checkInvert, self.buttonAllEdge)
        MainWindow.setTabOrder(self.buttonAllEdge, self.checkShowSilhouette)
        MainWindow.setTabOrder(self.checkShowSilhouette, self.checkShowEdge)
        MainWindow.setTabOrder(self.checkShowEdge, self.checkShowCenter)
        MainWindow.setTabOrder(self.checkShowCenter, self.buttonEdge)
        MainWindow.setTabOrder(self.buttonEdge, self.buttonFinishEdge)
        MainWindow.setTabOrder(self.buttonFinishEdge, self.tableTraject)
        MainWindow.setTabOrder(self.tableTraject, self.spinMaxPoints)
        MainWindow.setTabOrder(self.spinMaxPoints, self.spinNeighbours)
        MainWindow.setTabOrder(self.spinNeighbours, self.checkCorners)
        MainWindow.setTabOrder(self.checkCorners, self.comboCornerCatcher)
        MainWindow.setTabOrder(self.comboCornerCatcher, self.checkSilhouette)
        MainWindow.setTabOrder(self.checkSilhouette, self.spinDetail)
        MainWindow.setTabOrder(self.spinDetail, self.buttonAllTraject)
        MainWindow.setTabOrder(self.buttonAllTraject, self.buttonTraject)
        MainWindow.setTabOrder(self.buttonTraject, self.buttonFinishTraject)
        MainWindow.setTabOrder(self.buttonFinishTraject, self.tableMotion)
        MainWindow.setTabOrder(self.tableMotion, self.spinBetweens)
        MainWindow.setTabOrder(self.spinBetweens, self.comboMotion)
        MainWindow.setTabOrder(self.comboMotion, self.spinFade)
        MainWindow.setTabOrder(self.spinFade, self.checkBlob)
        MainWindow.setTabOrder(self.checkBlob, self.buttonAllMotion)
        MainWindow.setTabOrder(self.buttonAllMotion, self.spinVignette)
        MainWindow.setTabOrder(self.spinVignette, self.spinInflate)
        MainWindow.setTabOrder(self.spinInflate, self.spinHardness)
        MainWindow.setTabOrder(self.spinHardness, self.buttonMotion)
        MainWindow.setTabOrder(self.buttonMotion, self.buttonRevPrev)
        MainWindow.setTabOrder(self.buttonRevPrev, self.buttonPlayMotion)
        MainWindow.setTabOrder(self.buttonPlayMotion, self.buttonFinishMotion)
        MainWindow.setTabOrder(self.buttonFinishMotion, self.editFolder)
        MainWindow.setTabOrder(self.editFolder, self.buttonFolder)
        MainWindow.setTabOrder(self.buttonFolder, self.buttonAbortRender)
        MainWindow.setTabOrder(self.buttonAbortRender, self.buttonRender)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MuddyMorph"))
        self.previewKey.setToolTip(_translate("MainWindow", "Feel free to drag and drop image files here"))
        self.buttonSelectFiles.setToolTip(_translate("MainWindow", "<html><head/><body><p>Select the full series of key images at once. File names determine the sequence.</p></body></html>"))
        self.buttonSelectFiles.setText(_translate("MainWindow", "Select key frames ..."))
        self.groupBox.setTitle(_translate("MainWindow", "Cycle"))
        self.radioStraight.setToolTip(_translate("MainWindow", "<html><head/><body><p>Do not make a loop.</p></body></html>"))
        self.radioStraight.setText(_translate("MainWindow", "→  None"))
        self.radioLoop.setToolTip(_translate("MainWindow", "<html><head/><body><p>Morph from the last key frame straight back to the first.</p></body></html>"))
        self.radioLoop.setText(_translate("MainWindow", "∞  Loop"))
        self.radioReverse.setToolTip(_translate("MainWindow", "<html><head/><body><p>Rewind all the way from the last key frame back to the first.</p></body></html>"))
        self.radioReverse.setText(_translate("MainWindow", "↔  Reverse"))
        self.buttonFinishKey.setToolTip(_translate("MainWindow", "<html><head/><body><p>Next come project preferences.</p></body></html>"))
        self.buttonFinishKey.setText(_translate("MainWindow", "Bring it on  ►►"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabImages), _translate("MainWindow", "Images"))
        self.label_2.setText(_translate("MainWindow", "Project name"))
        self.editName.setToolTip(_translate("MainWindow", "<html><head/><body><p>Inbetween frames will be saved with this name.</p></body></html>"))
        self.editName.setText(_translate("MainWindow", "morph"))
        self.label_01.setText(_translate("MainWindow", "Export file extension  "))
        self.comboExtension.setItemText(0, _translate("MainWindow", "png"))
        self.comboExtension.setItemText(1, _translate("MainWindow", "jpg"))
        self.checkTransparency.setText(_translate("MainWindow", "Retain transparency"))
        self.label_02.setText(_translate("MainWindow", "Export image quality  "))
        self.spinQuality.setSuffix(_translate("MainWindow", " %"))
        self.label_04.setText(_translate("MainWindow", "Typical tweens  "))
        self.spinTypicalTweens.setToolTip(_translate("MainWindow", "<html><head/><body><p>Later the number of inbetweens can be fine-tuned for each morph.</p></body></html>"))
        self.spinTypicalTweens.setSuffix(_translate("MainWindow", " frames"))
        self.label_05.setText(_translate("MainWindow", "Background color  "))
        self.checkAutoBack.setToolTip(_translate("MainWindow", "<html><head/><body><p>Pick the most common color from the pixels on the edge of the frame.</p></body></html>"))
        self.checkAutoBack.setText(_translate("MainWindow", "Use border color"))
        self.label_6.setText(_translate("MainWindow", "Line art color  "))
        self.checkLineColor.setToolTip(_translate("MainWindow", "<html><head/><body><p>If the key frames contain clear and consistent line art, this option may help to improve trajectory quality.</p></body></html>"))
        self.checkLineColor.setText(_translate("MainWindow", "Subtract line art from silhouette"))
        self.label_29.setText(_translate("MainWindow", "Background image  "))
        self.buttonBackdrop.setToolTip(_translate("MainWindow", "<html><head/><body><p>It is possible to apply a fixed backdrop image. It should have the exact same dimensions as the keys.</p></body></html>"))
        self.buttonBackdrop.setText(_translate("MainWindow", "Select file ..."))
        self.buttonFinishPrefs.setToolTip(_translate("MainWindow", "<html><head/><body><p>The next step is silhouette extraction.</p></body></html>"))
        self.buttonFinishPrefs.setText(_translate("MainWindow", "Hey ho, let\'s go  ►►"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabPreferences), _translate("MainWindow", "Preferences"))
        self.comboChannel.setToolTip(_translate("MainWindow", "<html><head/><body><p>If possible select a channel in which the character slash subject is clearly distinguishable from the background.</p></body></html>"))
        self.comboChannel.setItemText(0, _translate("MainWindow", "Alpha"))
        self.comboChannel.setItemText(1, _translate("MainWindow", "Lightness"))
        self.comboChannel.setItemText(2, _translate("MainWindow", "Luminosity"))
        self.comboChannel.setItemText(3, _translate("MainWindow", "Average"))
        self.comboChannel.setItemText(4, _translate("MainWindow", "Maximum"))
        self.comboChannel.setItemText(5, _translate("MainWindow", "Red"))
        self.comboChannel.setItemText(6, _translate("MainWindow", "Green"))
        self.comboChannel.setItemText(7, _translate("MainWindow", "Blue"))
        self.comboChannel.setItemText(8, _translate("MainWindow", "Greenscreen"))
        self.comboChannel.setItemText(9, _translate("MainWindow", "Bluescreen"))
        self.label_07.setText(_translate("MainWindow", "Channel  "))
        self.label_08.setText(_translate("MainWindow", "Soften  "))
        self.spinBlur.setToolTip(_translate("MainWindow", "<html><head/><body><p>A bit of gaussian blur can help to get smooth silhouette edges.</p></body></html>"))
        self.spinBlur.setSuffix(_translate("MainWindow", " px"))
        self.label_09.setText(_translate("MainWindow", "Threshold  "))
        self.spinThreshold.setToolTip(_translate("MainWindow", "<html><head/><body><p>Everything darker (or lighter in case of inversion) than this intensity threshold will be part of the silhouette shape.</p></body></html>"))
        self.spinThreshold.setSuffix(_translate("MainWindow", " %"))
        self.checkScharr.setToolTip(_translate("MainWindow", "<html><head/><body><p>Use a Scharr filter (an effect similar to Sobel) to exclude contrasty edges from the silhouette.</p><p>This option can come in handy in case of photographs or drawings without obvious lines.</p></body></html>"))
        self.checkScharr.setText(_translate("MainWindow", "Carve out edges"))
        self.checkInvert.setToolTip(_translate("MainWindow", "<html><head/><body><p>Select this option if the silhouette shape is lighter than its surroundings.</p></body></html>"))
        self.checkInvert.setText(_translate("MainWindow", "Invert"))
        self.buttonAllEdge.setToolTip(_translate("MainWindow", "<html><head/><body><p>Apply these silhouette settings to all key frames.</p></body></html>"))
        self.buttonAllEdge.setText(_translate("MainWindow", "Apply to all  ☼"))
        self.checkShowSilhouette.setToolTip(_translate("MainWindow", "<html><head/><body><p>Show the detected silhouette as a blue area.</p></body></html>"))
        self.checkShowSilhouette.setText(_translate("MainWindow", "Show silhouette"))
        self.checkShowEdge.setToolTip(_translate("MainWindow", "<html><head/><body><p>Show silhouette edges as blue highlights.</p></body></html>"))
        self.checkShowEdge.setText(_translate("MainWindow", "Show edges"))
        self.checkShowCenter.setToolTip(_translate("MainWindow", "<html><head/><body><p>Depict the silhouette center of mass position, size, and orientation as a green steering wheel symbol.</p></body></html>"))
        self.checkShowCenter.setText(_translate("MainWindow", "Show center"))
        self.buttonEdge.setToolTip(_translate("MainWindow", "<html><head/><body><p>Detect the silhouette and show it in the preview pane. This usually takes a couple of seconds.</p></body></html>"))
        self.buttonEdge.setText(_translate("MainWindow", "Preview  ☻"))
        self.buttonFinishEdge.setToolTip(_translate("MainWindow", "<html><head/><body><p>Up next are the trajectories.</p></body></html>"))
        self.buttonFinishEdge.setText(_translate("MainWindow", "Keep on grooving  ►►"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabEdge), _translate("MainWindow", "Silhouette"))
        self.label_18.setText(_translate("MainWindow", "Nodes  "))
        self.spinMaxPoints.setToolTip(_translate("MainWindow", "<html><head/><body><p>Upper limit to the total number of nodes.</p></body></html>"))
        self.spinMaxPoints.setSuffix(_translate("MainWindow", " points"))
        self.spinMaxPoints.setPrefix(_translate("MainWindow", "≤ "))
        self.spinNeighbours.setToolTip(_translate("MainWindow", "<html><head/><body><p>The number of nearest neighbour nodes to consider when making matches.</p></body></html>"))
        self.spinNeighbours.setSuffix(_translate("MainWindow", " points"))
        self.checkCorners.setToolTip(_translate("MainWindow", "<html><head/><body><p>Whether to use corner key points.</p></body></html>"))
        self.checkCorners.setText(_translate("MainWindow", "Corners  "))
        self.comboCornerCatcher.setToolTip(_translate("MainWindow", "<html><head/><body><p>Detect corner key points with this algorithm.</p></body></html>"))
        self.comboCornerCatcher.setItemText(0, _translate("MainWindow", "ORB"))
        self.comboCornerCatcher.setItemText(1, _translate("MainWindow", "CENSURE"))
        self.checkSilhouette.setToolTip(_translate("MainWindow", "<html><head/><body><p>Whether to use the silhouette center and edges.</p></body></html>"))
        self.checkSilhouette.setText(_translate("MainWindow", "Silhouette  "))
        self.checkArc.setToolTip(_translate("MainWindow", "<html><head/><body><p>Make nodes move in arcs instead of straight lines.</p></body></html>"))
        self.checkArc.setText(_translate("MainWindow", "Arcs"))
        self.checkSpin.setToolTip(_translate("MainWindow", "<html><head/><body><p>Whether to apply rotation based on overall silhouette orientation.</p></body></html>"))
        self.checkSpin.setText(_translate("MainWindow", "Spin  "))
        self.label_19.setText(_translate("MainWindow", "Detail  "))
        self.spinDetail.setToolTip(_translate("MainWindow", "<html><head/><body><p>Size of local similarity evaluation spots relative to the frame diagonal (promille).</p></body></html>"))
        self.spinDetail.setSuffix(_translate("MainWindow", " ‰"))
        self.label_17.setText(_translate("MainWindow", "Neighbours"))
        self.spinSimiLim.setToolTip(_translate("MainWindow", "<html><head/><body><p>Threshold for correlation coefficient.</p></body></html>"))
        self.spinSimiLim.setSuffix(_translate("MainWindow", " %"))
        self.label_30.setText(_translate("MainWindow", "Minimal similarity  "))
        self.spinMaxMove.setToolTip(_translate("MainWindow", "<html><head/><body><p>Upper limit for the distance travelled relative to the frame diagonal.</p></body></html>"))
        self.spinMaxMove.setSuffix(_translate("MainWindow", " %"))
        self.label_31.setText(_translate("MainWindow", "Maximal distance  "))
        self.buttonAllTraject.setToolTip(_translate("MainWindow", "<html><head/><body><p>Apply these trajectory settings to all morphs.</p></body></html>"))
        self.buttonAllTraject.setText(_translate("MainWindow", "Apply to all ☼"))
        self.buttonTraject.setToolTip(_translate("MainWindow", "<html><head/><body><p>Detect trajectories and show the result. Computation can take a while.</p></body></html>"))
        self.buttonTraject.setText(_translate("MainWindow", "Preview  ☻"))
        self.buttonFinishTraject.setToolTip(_translate("MainWindow", "<html><head/><body><p>To the next step, the creation of inbetweens.</p></body></html>"))
        self.buttonFinishTraject.setText(_translate("MainWindow", "Take it to the bridge  ►►"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabTrajectories), _translate("MainWindow", "Trajectories"))
        self.groupBox_4.setTitle(_translate("MainWindow", "For this morph"))
        self.label_22.setText(_translate("MainWindow", "Inbetweens"))
        self.spinBetweens.setSuffix(_translate("MainWindow", " frames"))
        self.label_23.setText(_translate("MainWindow", "Motion"))
        self.comboMotion.setToolTip(_translate("MainWindow", "<html><head/><body><p>Whether or not to accelerate from and/or decellerate to full stop.</p></body></html>"))
        self.comboMotion.setItemText(0, _translate("MainWindow", "Linear"))
        self.comboMotion.setItemText(1, _translate("MainWindow", "Doublestop"))
        self.comboMotion.setItemText(2, _translate("MainWindow", "Accelerate"))
        self.comboMotion.setItemText(3, _translate("MainWindow", "Decelerate"))
        self.label_28.setText(_translate("MainWindow", "Crossfade"))
        self.checkBlob.setToolTip(_translate("MainWindow", "<html><head/><body><p>By default deformation of achieved by triangular warping.</p><p>A less jagged alternative can be achieved by means of blobs, which are essentially soft circular clone brush dots.</p></body></html>"))
        self.checkBlob.setText(_translate("MainWindow", "Blobbify"))
        self.spinFade.setToolTip(_translate("MainWindow", "<html><head/><body><p>Cross fade time relative to the morph duration. When set to 100% the amount of crossfade will equal the distance travelled for all inbetweens.</p></body></html>"))
        self.spinFade.setSuffix(_translate("MainWindow", " %"))
        self.buttonAllMotion.setToolTip(_translate("MainWindow", "<html><head/><body><p>Apply above motion settings to all morphs.</p></body></html>"))
        self.buttonAllMotion.setText(_translate("MainWindow", "Apply to all  ☼"))
        self.groupBox_3.setTitle(_translate("MainWindow", "For all morphs"))
        self.label_27.setText(_translate("MainWindow", "Vignette  "))
        self.spinVignette.setToolTip(_translate("MainWindow", "<html><head/><body><p>Awkward artefacts near the frame edges can be conceiled by a soft edge vignette.</p></body></html>"))
        self.spinVignette.setSuffix(_translate("MainWindow", " px"))
        self.label_32.setText(_translate("MainWindow", "Blob scale  "))
        self.label_33.setText(_translate("MainWindow", "Blob hardness  "))
        self.spinInflate.setToolTip(_translate("MainWindow", "<html><head/><body><p>Blob size equals this scale times the typical distance to the nearest neighbours</p></body></html>"))
        self.spinInflate.setSuffix(_translate("MainWindow", " %"))
        self.spinHardness.setToolTip(_translate("MainWindow", "<html><head/><body><p>Hardness of the clone brush tip.</p></body></html>"))
        self.spinHardness.setSuffix(_translate("MainWindow", " %"))
        self.buttonMotion.setToolTip(_translate("MainWindow", "<html><head/><body><p>Make the morph, and then show the result as a looped animation.</p></body></html>"))
        self.buttonMotion.setText(_translate("MainWindow", "Preview  ☻"))
        self.buttonRevPrev.setText(_translate("MainWindow", "↔"))
        self.spinFrameRate.setSuffix(_translate("MainWindow", " fps"))
        self.buttonPlayMotion.setToolTip(_translate("MainWindow", "<html><head/><body><p>Make the morph, and then show the result as a looped animation.</p></body></html>"))
        self.buttonPlayMotion.setText(_translate("MainWindow", "Play  ►"))
        self.buttonFinishMotion.setToolTip(_translate("MainWindow", "<html><head/><body><p>Happy with all settings?</p><p>Then it\'s time to render the full project.</p></body></html>"))
        self.buttonFinishMotion.setText(_translate("MainWindow", "Shake it like a polaroid picture  ►►"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabMotion), _translate("MainWindow", "Motion"))
        self.label_25.setText(_translate("MainWindow", "Export to folder"))
        self.editFolder.setToolTip(_translate("MainWindow", "<html><head/><body><p>The whole sequence will be exported to this folder.</p><p>Make sure it is valid and empty; existing files will be silently overwritten.</p></body></html>"))
        self.buttonFolder.setText(_translate("MainWindow", "Select folder ..."))
        self.buttonAbortRender.setToolTip(_translate("MainWindow", "<html><head/><body><p>Stop right now, thank you very much! I need somebody with a human touch.</p></body></html>"))
        self.buttonAbortRender.setText(_translate("MainWindow", "Abort export  ■"))
        self.buttonRender.setToolTip(_translate("MainWindow", "<html><head/><body><p>Let\'s go and make some interesting inbetweens!</p></body></html>"))
        self.buttonRender.setText(_translate("MainWindow", "Make it so  ►►"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabRender), _translate("MainWindow", "Render"))

import muddymorph_rc
